INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Scammy Crypto Bank!
What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Press "n" to login again or start over!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.validators.Validator} - Success!
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.validators.Validator} - Success!
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.validators.Validator} - Success!
INFO - {class: com.cryptobank.DAOImpl.UserDAOImpl} - Great, this username doesn't exist!
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.validators.Validator} - Success!
INFO - {class: com.cryptobank.DAOImpl.UserDAOImpl} - Great, this username doesn't exist!
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:
INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a user_name.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* \\!@#$%^&*
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - com.cryptobank.models.exceptions.UserException: Your password is not valid. Please try again!
INFO - {class: com.cryptobank.models.User} - com.cryptobank.models.exceptions.UserException: Your password is not valid. Please try again!
INFO - {class: com.cryptobank.models.User} - com.cryptobank.models.exceptions.UserException: Your password is not valid. Please try again!
INFO - {class: com.cryptobank.models.User} - com.cryptobank.models.exceptions.UserException: Your password is not valid. Please try again!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - Your passwords weren't equal. Please try again!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - Your passwords weren't equal. Please try again!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - Your passwords weren't equal. Please try again!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - Your passwords weren't equal. Please try again!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - Your passwords weren't equal. Please try again!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* \\!@#$%^&*
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - User [userId=null, userName=espinalc, email=christopher.espinal@gmail.com]
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* \\!@#$%^&*
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - User [userId=null, userName=espianlc, email=christopher.espinal@gmail.com]
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.models.User} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - User [userId=2, userName=espinalc, email=christopher.espinal@gmail.com]
INFO - {class: com.cryptobank.main.Main} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - User [userId=3, userName=espinalc, email=christopher.espinal@gmail.com, group=com.cryptobank.models.UserGroup@6d2a209c]
INFO - {class: com.cryptobank.main.Main} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.main.Main} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.main.Main} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.main.Main} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - User [userId=4, userName=espinalc, email=christopher.espinal@gmail.com, group=com.cryptobank.models.UserGroup@6d2a209c]
INFO - {class: com.cryptobank.main.Main} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Our Login Page is under construction. Come back later
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Great, now enter your password!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Great, now enter your password!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Great, now enter your password!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.models.User} - This user name is already taken. Please try again
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to start over!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - That is not a valid choice. Please try again!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - That is not a valid choice. Please try again!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - That is not a valid choice. Please try again!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This email is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This email is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=5, userName=espinalc1, email=christopher.espinal@yahoo.com, group=com.cryptobank.models.UserGroup@7c7b252e]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This email is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=6, userName=espianlc3, email=christopher.espinal@hotmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This user name is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=7, userName=espinalc2, email=christopher.espinal2@gmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=8, userName=espinalc5, email=chris.espinal@gmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Alrighty, let's get to your dashboard!
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - What would you like to do next?
Press "1" to leave.
Enter any other key to continue!

INFO - {class: com.cryptobank.main.Main} - Alrighty, let's get to your dashboard!
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Sorry, that is not a correct command.
INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Alrighty, let's get to your dashboard!
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Customer dashboard
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=10, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Officially, entered the employee dashboard!
INFO - {class: com.cryptobank.frontend.Dashboard} - As an employee, you also have a customer account at Crypto Bank!
INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Officially, entered the employee dashboard!
INFO - {class: com.cryptobank.frontend.Dashboard} - As an employee, you also have a customer account at Crypto Bank!
INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Sorry, try again. However, follow these rules
		* This must be between 8 and 15 characters long.
		* Also, if it's taken, we'll let you know.

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - This email is already taken. Please try again
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=11, userName=espianlc1, email=christopher.espinal2@gmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		*Press 1 to create an account
 	* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		*Press 1 to create an account
 	*Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		*Press 1 to create an account
 	* Press anything else to quit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - org.postgresql.jdbc.PgResultSet@75329a49
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - org.postgresql.jdbc.PgResultSet@75329a49
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		*Press 1 to continue
 	*Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there were no such accounts!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Enter account number to approve, here: 

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the account index to approve, here: 

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Banking system
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts, revature

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - org.postgresql.jdbc.PgResultSet@49c386c8
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Here are all of your accounts, revature

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=6, account_number=6, account_balance=6.0, account_user=User [userId=10, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=6, account_number=6, account_balance=6.0, account_user=User [userId=10, userName=revature, email=revature@revature.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=6, account_number=6, account_balance=6.0, account_user=User [userId=10, userName=revature, email=revature@revature.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 
			* If you enter an invalid account number you'll leave this dashboard!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, revature. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, revature. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserNa. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserN2. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=2, account_number=2, account_balance=2.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=3, account_number=3, account_balance=3.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=1, account_number=1, account_balance=1.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=4, account_number=4, account_balance=4.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=5, account_number=5, account_balance=5.0, account_user=User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserN2. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=9, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Index 1 User [userId=10, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Index 2 User [userId=11, userName=espianlc1, email=christopher.espinal2@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserN2. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=28, userName=testUserN2, email=testEmail2@testCo.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - testUserN2's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=22, account_number=22, account_balance=22.0, account_user=User [userId=28, userName=testUserN2, email=testEmail2@testCo.com, group=UserGroup [userGroupName=employee]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Sorry, try again. However, follow these rules
		* Your email address must be valid.

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, revature. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - revature's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=23, account_number=23, account_balance=23.0, account_user=User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=23, account_number=23, account_balance=23.0, account_user=User [userId=29, userName=revature, email=revature@revature.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 
			* Press any other number to quit!

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do to this account?
		* Enter 1 to approve
		* Enter 2 to delete
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - View Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, revature. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - revature's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	   BankAccount [account_id=23, account_number=23, account_balance=23.0, account_user=User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - That is not a valid choice. Please try again!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a username.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter an email address.
If it's not unique, we'll let you know:

DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
DEBUG - {class: com.cryptobank.models.validators.Validator} - The input is unique!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Please enter a password! Here are the rules: 
		* Your password must be between 8 and 15 characters long
		* It can include any of the following characters:
				* upper and lower case characters and numbers.
				* !@#$%^&*
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - Now, one more time!
DEBUG - {class: com.cryptobank.models.validators.Validator} - The validation pattern was matched
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - If you'd like, try to login with your new username and password!
INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Approved Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, try again!

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.frontend.Dashboard} - Hello, testUserN2. In this dashboard you'll be able to view
customer accounts in our database! To view a customer's account please select from
the following list:

INFO - {class: com.cryptobank.frontend.Dashboard} - Index 0 User [userId=29, userName=revature, email=revature@revature.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Index 1 User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Index 2 User [userId=31, userName=testUserN2, email=testEmail2@testCo.com, group=UserGroup [userGroupName=employee]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the user to see their account!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=52, account_number=52, account_balance=0.0, account_user=User [userId=57, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This transaction wasn't processed!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=53, account_number=53, account_balance=0.0, account_user=User [userId=58, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This transaction wasn't processed!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=55, account_number=55, account_balance=0.0, account_user=User [userId=60, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This transaction wasn't processed!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=57, account_number=57, account_balance=0.0, account_user=User [userId=62, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have money in this account!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=58, account_number=58, account_balance=0.0, account_user=User [userId=63, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=63, account_number=63, account_balance=0.0, account_user=User [userId=68, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have enough money in your account!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=64, account_number=64, account_balance=0.0, account_user=User [userId=69, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Sorry, but you don't have enough money in your account!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=65, account_number=65, account_balance=0.0, account_user=User [userId=70, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=66, account_number=66, account_balance=0.0, account_user=User [userId=71, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=68, account_number=68, account_balance=0.0, account_user=User [userId=73, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, revature
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Approve New Customer Accounts
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Pending Accounts dashboard, revature
		* You can approve of Pending Accounts in this dashboard
		* Enter the account number to approve:

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 BankAccount [account_id=68, account_number=68, account_balance=68.0, account_user=User [userId=73, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 
			* Press any other number to quit!

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do to this account?
		* Enter 1 to approve
		* Enter 2 to delete
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 BankAccount [account_id=68, account_number=68, account_balance=68.0, account_user=User [userId=73, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 
			* Press any other number to quit!

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do to this account?
		* Enter 1 to approve
		* Enter 2 to delete
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 BankAccount [account_id=68, account_number=68, account_balance=68.0, account_user=User [userId=73, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the index of the account you'd like to approve or delete here: 
			* Press any other number to quit!

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do to this account?
		* Enter 1 to approve
		* Enter 2 to delete
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, there are no accounts!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, revature.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the employee dashboard, revature
		* Press 1 to View Bank Acounts in the Crypto Bank System
		* Press 2 to Approve New Customer Accounts
Also, remember, that as an employee you automatically generate an Account
		* Press 3 to access your personal customer dashbaord
If you want to quit, enter any other button.

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     24
INFO - {class: com.cryptobank.frontend.Dashboard} -     25
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Withdraw
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue or anything else to leave!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The following transaction was successful: 
		Transaction [type=1, transaction_id=4, account=BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The following transaction was successful: 
		Transaction [type=1, transaction_id=5, account=BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=80, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=81, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=73, account_number=73, account_balance=0.0, account_user=User [userId=81, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=83, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=84, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=85, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=76, account_number=76, account_balance=0.0, account_user=User [userId=84, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=86, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=87, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=78, account_number=78, account_balance=0.0, account_user=User [userId=86, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=88, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=89, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=80, account_number=80, account_balance=0.0, account_user=User [userId=88, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=91, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=83, account_number=83, account_balance=0.0, account_user=User [userId=91, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=92, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=84, account_number=84, account_balance=0.0, account_user=User [userId=92, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=83, account_number=83, account_balance=0.0, account_user=User [userId=91, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=94, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=86, account_number=86, account_balance=0.0, account_user=User [userId=94, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=95, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=87, account_number=87, account_balance=0.0, account_user=User [userId=95, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=86, account_number=86, account_balance=0.0, account_user=User [userId=94, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=96, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=88, account_number=88, account_balance=0.0, account_user=User [userId=96, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=97, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=89, account_number=89, account_balance=0.0, account_user=User [userId=97, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=88, account_number=88, account_balance=0.0, account_user=User [userId=96, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=89, account_number=89, account_balance=0.0, account_user=User [userId=97, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - ... Leaving!
INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=90, account_number=90, account_balance=90.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=99, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=92, account_number=92, account_balance=0.0, account_user=User [userId=99, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=100, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=93, account_number=93, account_balance=0.0, account_user=User [userId=100, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=92, account_number=92, account_balance=0.0, account_user=User [userId=99, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=93, account_number=93, account_balance=0.0, account_user=User [userId=100, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=103, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=96, account_number=96, account_balance=0.0, account_user=User [userId=103, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=104, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=97, account_number=97, account_balance=0.0, account_user=User [userId=104, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an a transaction
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=105, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=98, account_number=98, account_balance=0.0, account_user=User [userId=105, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=106, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=99, account_number=99, account_balance=0.0, account_user=User [userId=106, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - This account doesn't exist. Please try again!

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=107, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=100, account_number=100, account_balance=0.0, account_user=User [userId=107, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=108, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=101, account_number=101, account_balance=0.0, account_user=User [userId=108, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=101, account_number=101, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=109, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=102, account_number=102, account_balance=0.0, account_user=User [userId=109, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=110, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=103, account_number=103, account_balance=0.0, account_user=User [userId=110, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=103, account_number=103, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=102, account_number=102, account_balance=0.0, account_user=User [userId=109, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=103, account_number=103, account_balance=0.0, account_user=User [userId=110, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=112, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=105, account_number=105, account_balance=0.0, account_user=User [userId=112, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=113, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=106, account_number=106, account_balance=0.0, account_user=User [userId=113, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=106, account_number=106, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=105, account_number=105, account_balance=0.0, account_user=User [userId=112, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=106, account_number=106, account_balance=0.0, account_user=User [userId=113, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=114, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=107, account_number=107, account_balance=0.0, account_user=User [userId=114, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=115, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=108, account_number=108, account_balance=0.0, account_user=User [userId=115, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=108, account_number=108, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=107, account_number=107, account_balance=0.0, account_user=User [userId=114, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=108, account_number=108, account_balance=0.0, account_user=User [userId=115, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=116, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=109, account_number=109, account_balance=0.0, account_user=User [userId=116, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=117, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=110, account_number=110, account_balance=0.0, account_user=User [userId=117, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=110, account_number=110, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=18, account=BankAccount [account_id=109, account_number=109, account_balance=0.0, account_user=User [userId=116, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=109, account_number=109, account_balance=0.0, account_user=User [userId=116, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=110, account_number=110, account_balance=0.0, account_user=User [userId=117, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=118, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=111, account_number=111, account_balance=0.0, account_user=User [userId=118, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=119, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=112, account_number=112, account_balance=0.0, account_user=User [userId=119, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=112, account_number=112, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=19, account=BankAccount [account_id=111, account_number=111, account_balance=0.0, account_user=User [userId=118, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=19, account=BankAccount [account_id=111, account_number=111, account_balance=0.0, account_user=User [userId=118, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=111, account_number=111, account_balance=0.0, account_user=User [userId=118, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=112, account_number=112, account_balance=0.0, account_user=User [userId=119, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=120, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=113, account_number=113, account_balance=0.0, account_user=User [userId=120, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=121, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=114, account_number=114, account_balance=0.0, account_user=User [userId=121, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=114, account_number=114, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=20, account=BankAccount [account_id=113, account_number=113, account_balance=0.0, account_user=User [userId=120, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=20, account=BankAccount [account_id=113, account_number=113, account_balance=0.0, account_user=User [userId=120, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method 20
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=113, account_number=113, account_balance=0.0, account_user=User [userId=120, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=114, account_number=114, account_balance=0.0, account_user=User [userId=121, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=122, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=115, account_number=115, account_balance=0.0, account_user=User [userId=122, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=123, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=116, account_number=116, account_balance=0.0, account_user=User [userId=123, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=116, account_number=116, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=21, account=BankAccount [account_id=115, account_number=115, account_balance=0.0, account_user=User [userId=122, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=21, account=BankAccount [account_id=115, account_number=115, account_balance=0.0, account_user=User [userId=122, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 21
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=115, account_number=115, account_balance=0.0, account_user=User [userId=122, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=116, account_number=116, account_balance=0.0, account_user=User [userId=123, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=124, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=117, account_number=117, account_balance=0.0, account_user=User [userId=124, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=125, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=118, account_number=118, account_balance=0.0, account_user=User [userId=125, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=118, account_number=118, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=22, account=BankAccount [account_id=117, account_number=117, account_balance=0.0, account_user=User [userId=124, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=22, account=BankAccount [account_id=117, account_number=117, account_balance=0.0, account_user=User [userId=124, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 22
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=117, account_number=117, account_balance=0.0, account_user=User [userId=124, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=118, account_number=118, account_balance=0.0, account_user=User [userId=125, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=126, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=119, account_number=119, account_balance=0.0, account_user=User [userId=126, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=127, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=120, account_number=120, account_balance=0.0, account_user=User [userId=127, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=119, account_number=119, account_balance=0.0, account_user=User [userId=126, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=120, account_number=120, account_balance=0.0, account_user=User [userId=127, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=128, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=121, account_number=121, account_balance=0.0, account_user=User [userId=128, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=129, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=122, account_number=122, account_balance=0.0, account_user=User [userId=129, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=122, account_number=122, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=23, account=BankAccount [account_id=121, account_number=121, account_balance=0.0, account_user=User [userId=128, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=23, account=BankAccount [account_id=121, account_number=121, account_balance=0.0, account_user=User [userId=128, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 23
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactionstrue
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=121, account_number=121, account_balance=0.0, account_user=User [userId=128, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=122, account_number=122, account_balance=0.0, account_user=User [userId=129, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=123, account_number=123, account_balance=0.0, account_user=User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=131, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=124, account_number=124, account_balance=0.0, account_user=User [userId=131, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=124, account_number=124, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=24, account=BankAccount [account_id=123, account_number=123, account_balance=0.0, account_user=User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=24, account=BankAccount [account_id=123, account_number=123, account_balance=0.0, account_user=User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=24, account=BankAccount [account_id=123, account_number=123, account_balance=0.0, account_user=User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 24
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=123, account_number=123, account_balance=0.0, account_user=User [userId=130, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=124, account_number=124, account_balance=0.0, account_user=User [userId=131, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=132, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=125, account_number=125, account_balance=0.0, account_user=User [userId=132, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=133, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=126, account_number=126, account_balance=0.0, account_user=User [userId=133, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 25
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=126, account_number=126, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=134, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=127, account_number=127, account_balance=0.0, account_user=User [userId=134, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=135, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=128, account_number=128, account_balance=0.0, account_user=User [userId=135, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 26
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=128, account_number=128, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=129, account_number=129, account_balance=0.0, account_user=User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=137, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=130, account_number=130, account_balance=0.0, account_user=User [userId=137, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 27
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=130, account_number=130, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=27, account=BankAccount [account_id=129, account_number=129, account_balance=0.0, account_user=User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=27, account=BankAccount [account_id=129, account_number=129, account_balance=0.0, account_user=User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=27, account=BankAccount [account_id=129, account_number=129, account_balance=0.0, account_user=User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 27
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=129, account_number=129, account_balance=0.0, account_user=User [userId=136, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=130, account_number=130, account_balance=0.0, account_user=User [userId=137, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=138, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=131, account_number=131, account_balance=0.0, account_user=User [userId=138, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=131, account_number=131, account_balance=0.0, account_user=User [userId=138, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=133, account_number=133, account_balance=0.0, account_user=User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=141, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=134, account_number=134, account_balance=0.0, account_user=User [userId=141, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 28
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=134, account_number=134, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction [type=1, transaction_id=28, account=BankAccount [account_id=133, account_number=133, account_balance=0.0, account_user=User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=28, account=BankAccount [account_id=133, account_number=133, account_balance=0.0, account_user=User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=28, account=BankAccount [account_id=133, account_number=133, account_balance=0.0, account_user=User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 28
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=133, account_number=133, account_balance=0.0, account_user=User [userId=140, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=134, account_number=134, account_balance=0.0, account_user=User [userId=141, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=142, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=135, account_number=135, account_balance=0.0, account_user=User [userId=142, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=143, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=136, account_number=136, account_balance=0.0, account_user=User [userId=143, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=135, account_number=135, account_balance=0.0, account_user=User [userId=142, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=136, account_number=136, account_balance=0.0, account_user=User [userId=143, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=137, account_number=137, account_balance=0.0, account_user=User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=145, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=138, account_number=138, account_balance=0.0, account_user=User [userId=145, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 29
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to:
		Receiver BankAccount [account_id=138, account_number=138, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=29, account=BankAccount [account_id=137, account_number=137, account_balance=0.0, account_user=User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=29, account=BankAccount [account_id=137, account_number=137, account_balance=0.0, account_user=User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=29, account=BankAccount [account_id=137, account_number=137, account_balance=0.0, account_user=User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 29
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=137, account_number=137, account_balance=0.0, account_user=User [userId=144, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=138, account_number=138, account_balance=0.0, account_user=User [userId=145, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=146, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=139, account_number=139, account_balance=0.0, account_user=User [userId=146, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=147, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=140, account_number=140, account_balance=0.0, account_user=User [userId=147, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=139, account_number=139, account_balance=0.0, account_user=User [userId=146, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=140, account_number=140, account_balance=0.0, account_user=User [userId=147, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=141, account_number=141, account_balance=0.0, account_user=User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=149, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=142, account_number=142, account_balance=0.0, account_user=User [userId=149, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 30
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver BankAccount [account_id=142, account_number=142, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=30, account=BankAccount [account_id=141, account_number=141, account_balance=0.0, account_user=User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=30, account=BankAccount [account_id=141, account_number=141, account_balance=0.0, account_user=User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=30, account=BankAccount [account_id=141, account_number=141, account_balance=0.0, account_user=User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 30
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=141, account_number=141, account_balance=0.0, account_user=User [userId=148, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=142, account_number=142, account_balance=0.0, account_user=User [userId=149, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=151, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=144, account_number=144, account_balance=0.0, account_user=User [userId=151, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=152, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=145, account_number=145, account_balance=0.0, account_user=User [userId=152, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 31
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver BankAccount [account_id=145, account_number=145, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=144, account_number=144, account_balance=0.0, account_user=User [userId=151, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=145, account_number=145, account_balance=0.0, account_user=User [userId=152, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=154, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=147, account_number=147, account_balance=0.0, account_user=User [userId=154, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=155, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=148, account_number=148, account_balance=0.0, account_user=User [userId=155, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=147, account_number=147, account_balance=0.0, account_user=User [userId=154, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=148, account_number=148, account_balance=0.0, account_user=User [userId=155, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=156, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=149, account_number=149, account_balance=0.0, account_user=User [userId=156, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=157, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=150, account_number=150, account_balance=0.0, account_user=User [userId=157, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 32
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver BankAccount [account_id=150, account_number=150, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=149, account_number=149, account_balance=0.0, account_user=User [userId=156, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=150, account_number=150, account_balance=0.0, account_user=User [userId=157, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=158, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=151, account_number=151, account_balance=0.0, account_user=User [userId=158, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=160, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=153, account_number=153, account_balance=0.0, account_user=User [userId=160, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=161, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=154, account_number=154, account_balance=0.0, account_user=User [userId=161, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 34
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=154, account_number=154, account_balance=0.0, account_user=User [userId=161, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=153, account_number=153, account_balance=0.0, account_user=User [userId=160, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=162, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=155, account_number=155, account_balance=0.0, account_user=User [userId=162, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=163, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=156, account_number=156, account_balance=0.0, account_user=User [userId=163, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 35
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=155, account_number=155, account_balance=0.0, account_user=User [userId=162, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=156, account_number=156, account_balance=0.0, account_user=User [userId=163, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=164, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=157, account_number=157, account_balance=0.0, account_user=User [userId=164, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=165, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=158, account_number=158, account_balance=0.0, account_user=User [userId=165, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 36
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=157, account_number=157, account_balance=0.0, account_user=User [userId=164, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=158, account_number=158, account_balance=0.0, account_user=User [userId=165, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=166, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=159, account_number=159, account_balance=0.0, account_user=User [userId=166, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=167, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=160, account_number=160, account_balance=0.0, account_user=User [userId=167, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 37
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=159, account_number=159, account_balance=0.0, account_user=User [userId=166, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=160, account_number=160, account_balance=0.0, account_user=User [userId=167, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=168, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=161, account_number=161, account_balance=0.0, account_user=User [userId=168, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=169, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=162, account_number=162, account_balance=0.0, account_user=User [userId=169, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 38
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=162, account_number=162, account_balance=0.0, account_user=User [userId=169, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=161, account_number=161, account_balance=0.0, account_user=User [userId=168, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=163, account_number=163, account_balance=0.0, account_user=User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=171, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=164, account_number=164, account_balance=0.0, account_user=User [userId=171, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 39
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=39, account=BankAccount [account_id=163, account_number=163, account_balance=0.0, account_user=User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=39, account=BankAccount [account_id=163, account_number=163, account_balance=0.0, account_user=User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=39, account=BankAccount [account_id=163, account_number=163, account_balance=0.0, account_user=User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 39
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=163, account_number=163, account_balance=0.0, account_user=User [userId=170, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=164, account_number=164, account_balance=0.0, account_user=User [userId=171, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=90, account_number=90, account_balance=90.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - This account doesn't exist. Please try again!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - This account doesn't exist. Please try again!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 40
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver BankAccount [account_id=90, account_number=90, account_balance=0.0, account_user=null, account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.main.Main} - Reaching the break for break purposes
INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=166, account_number=166, account_balance=0.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 41
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 41
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.DeleteTransactionTest} - [Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.DeleteTransactionTest} - [Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=41, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 41
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - hello
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 42
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 44
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 45
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 46
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 47
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 48
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 49
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 50
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 51
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 52
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 53
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 54
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 55
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 56
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = null
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = null
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 57
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 58
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = null
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 59
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 60
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = null
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 42
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 44
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 45
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 46
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 47
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 48
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 49
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 50
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 51
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 52
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 53
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 54
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 55
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 56
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 57
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 58
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 59
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 60
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 61
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 62
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = null
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 42
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=43, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 44
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 45
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 46
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 47
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 48
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 49
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 50
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 51
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 52
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 53
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 54
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 55
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 56
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 57
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 58
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 59
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 60
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 61
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 62
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 63
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 64
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = null
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 65
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 66
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 67
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 68
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 69
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 70
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 71
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 72
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 73
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 74
INFO - {class: com.cryptobank.models.UserCreateTest} - New Transaction = Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=null, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction Id = 43
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=43, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 43
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=63, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=64, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=65, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=66, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=67, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=68, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=69, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=70, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=71, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=72, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=73, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=74, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=63, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=64, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=65, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=66, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=67, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=68, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=69, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=70, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=71, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=72, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=73, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=74, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=63, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=64, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=65, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=66, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=67, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=68, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=69, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=70, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=71, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=72, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=73, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=74, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=63, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=64, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=65, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=66, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=67, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=68, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=69, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=70, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=71, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=72, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=73, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=74, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=42, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 42
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=44, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 44
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=45, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 45
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=46, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 46
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=47, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 47
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=48, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 48
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=49, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 49
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=50, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 50
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=51, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 51
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=52, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 52
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=53, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 53
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=54, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 54
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=55, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 55
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=56, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 56
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=57, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 57
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=58, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 58
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=59, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 59
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=60, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 60
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=61, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 61
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=62, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 62
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=63, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 63
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=64, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 64
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=65, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 65
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=66, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 66
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=67, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 67
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=68, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 68
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=69, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 69
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=70, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 70
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=71, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 71
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=72, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 72
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=73, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 73
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=74, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 74
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 75
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 76
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 77
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 78
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 79
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 80
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 81
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 82
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 83
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 84
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 85
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 86
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 87
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 88
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 89
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 90
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 91
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 92
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 93
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 94
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 85
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 86
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 87
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 88
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 89
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 90
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 91
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 92
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 93
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 94
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 95
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 96
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 97
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 98
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 99
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 100
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 101
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 102
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 103
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 104
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 85
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 86
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 87
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 88
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 89
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 90
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 91
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 92
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 93
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 94
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 95
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 96
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 97
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 98
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 99
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 100
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 101
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 102
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 103
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 104
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 105
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 106
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 107
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 108
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 109
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 110
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 111
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 112
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 113
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 114
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 85
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 86
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 87
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 88
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 89
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 90
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 91
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 92
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 93
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 94
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 95
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 96
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 97
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 98
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 99
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 100
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 101
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 102
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 103
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 104
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 105
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 106
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 107
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 108
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 109
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 110
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 111
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 112
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 113
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 114
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true
INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 115
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 116
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 117
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 118
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 119
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 120
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 121
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 122
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 123
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 124
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 85
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 86
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 87
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 88
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 89
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 90
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 91
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 92
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 93
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 94
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 95
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 96
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 97
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 98
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 99
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 100
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 101
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 102
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 103
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 104
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 105
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 106
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 107
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 108
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 109
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 110
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 111
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 112
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 113
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 114
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 115
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 116
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 117
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 118
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 119
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 120
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 121
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 122
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 123
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 124
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions: 
[Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending], Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=75, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 75
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=76, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 76
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=77, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 77
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=78, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 78
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=79, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 79
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=80, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 80
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=81, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 81
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=82, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 82
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=83, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 83
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=84, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 84
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=85, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 85
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=86, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 86
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=87, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 87
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=88, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 88
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=89, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 89
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=90, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 90
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=91, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 91
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=92, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 92
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=93, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 93
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=94, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 94
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=95, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 95
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=96, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 96
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=97, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 97
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=98, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 98
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=99, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 99
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=100, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 100
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=101, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 101
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=102, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 102
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=103, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 103
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=104, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 104
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=105, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 105
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=106, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 106
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=107, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 107
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=108, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 108
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=109, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 109
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=110, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 110
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=111, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 111
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=112, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 112
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=113, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 113
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=114, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 114
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=115, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 115
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=116, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 116
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=117, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 117
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=118, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 118
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=119, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 119
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=120, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 120
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=121, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 121
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=122, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 122
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=123, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 123
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transaction [type=1, transaction_id=124, account=BankAccount [account_id=165, account_number=165, account_balance=0.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 124
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Delete Users Transactions true

INFO - {class: com.cryptobank.models.UserCreateTest} - Now Testing Deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 172
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 173
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=166, account_number=166, account_balance=166.0, account_user=User [userId=173, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=124, getAccount()=BankAccount [account_id=165, account_number=165, account_balance=165.0, account_user=User [userId=172, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 124
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - 
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=125, account_number=125, account_balance=0.0, account_user=User [userId=132, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=126, account_number=126, account_balance=0.0, account_user=User [userId=133, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=127, account_number=127, account_balance=0.0, account_user=User [userId=134, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - BankAccount [account_id=128, account_number=128, account_balance=0.0, account_user=User [userId=135, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=176, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=168, account_number=168, account_balance=0.0, account_user=User [userId=176, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=177, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=169, account_number=169, account_balance=0.0, account_user=User [userId=177, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 125
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=UserGroup [userGroupName=customer]], account_status=false]
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 126
INFO - {class: com.cryptobank.models.UserCreateTest} - It worked!!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 127
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 128
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 129
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 130
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 131
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 132
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 133
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 134
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 135
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 136
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 137
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 138
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 139
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 140
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 141
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 142
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 143
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 144
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 145
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 146
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 147
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 148
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 149
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 150
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 151
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 152
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 153
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 154
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 155
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 156
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 157
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 158
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 159
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 160
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 161
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 162
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 163
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 164
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 165
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 166
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
DEBUG - {class: com.cryptobank.models.UserCreateTest} - 0
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 167
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 168
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 169
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 170
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 171
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 172
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 173
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 174
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 175
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 176
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
DEBUG - {class: com.cryptobank.models.UserCreateTest} - 0
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 177
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 178
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 180
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 181
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 182
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 183
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 184
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 185
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 186
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 0
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 187
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 188
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 189
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 190
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 191
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 192
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 193
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 194
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 195
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 196
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 60
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 197
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 198
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 199
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 200
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 201
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 202
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 203
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 204
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 205
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 206
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 10
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 207
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 208
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 209
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 210
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 211
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 212
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 213
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 214
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 215
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 216
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 20
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 217
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 218
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 219
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 220
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 221
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 222
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 223
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 224
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 225
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 226
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 30
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 227
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 228
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 229
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 230
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 231
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 232
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 233
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 234
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 235
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 236
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 40
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 237
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 238
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 239
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 240
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 241
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 242
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 243
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 244
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 245
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 246
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 50
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 247
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 248
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 249
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 250
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 251
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 252
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 253
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 254
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 255
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 256
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.models.UserCreateTest} - c = 60
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=171.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=242, getAccount()=BankAccount [account_id=170, account_number=170, account_balance=170.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 242
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 257
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 258
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 259
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 260
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 261
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 262
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 263
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 264
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 265
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 266
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=171.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=242, getAccount()=BankAccount [account_id=170, account_number=170, account_balance=170.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 242
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=197, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=198, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=199, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=200, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=201, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=202, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=203, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=204, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=205, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=206, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=207, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=208, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=209, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=210, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=211, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=212, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=213, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=214, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=215, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=216, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=217, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=218, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=219, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=220, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=221, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=222, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=223, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=224, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=225, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=226, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=227, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=228, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=229, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=230, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=231, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=232, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=233, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=234, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=235, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=236, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=237, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=238, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=239, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=240, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=241, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=243, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=244, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=245, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=246, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=247, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=248, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=249, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=250, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=251, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=252, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=253, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=254, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=255, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=256, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=257, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=258, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=259, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=260, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=261, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=262, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=263, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=264, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=265, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=266, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=171.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=242, getAccount()=BankAccount [account_id=170, account_number=170, account_balance=170.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 242
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=197, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=198, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=199, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=200, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=201, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=202, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=203, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=204, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=205, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=206, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=207, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=208, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=209, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=210, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=211, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=212, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=213, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=214, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=215, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=216, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=217, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=218, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=219, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=220, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=221, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=222, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=223, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=224, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=225, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=226, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=227, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=228, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=229, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=230, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=231, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=232, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=233, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=234, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=235, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=236, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=237, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=238, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=239, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=240, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=241, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=243, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=244, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=245, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=246, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=247, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=248, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=249, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=250, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=251, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=252, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=253, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=254, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=255, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=256, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=257, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=258, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=259, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=260, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=261, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=262, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=263, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=264, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=265, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=266, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 267
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=171.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=267, getAccount()=BankAccount [account_id=170, account_number=170, account_balance=170.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 267
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 268
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=171.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=268, getAccount()=BankAccount [account_id=170, account_number=170, account_balance=170.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 268
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 269
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method 269
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransaction Method - transaction Id = 269
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 270
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransactionById Method 270
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransactionById Method - transaction Id = 270
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 271
INFO - {class: com.cryptobank.models.UserCreateTest} - Transactions complete!

INFO - {class: com.cryptobank.models.UserCreateTest} - true
INFO - {class: com.cryptobank.models.UserCreateTest} - true
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransactionById Method 271
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - DeleteTransactionById Method - transaction Id = 271
INFO - {class: com.cryptobank.models.UserCreateTest} - Done with deletion 

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_id=170, account_number=170, account_balance=0.0, account_user=User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 30
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 30
INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_id=90, account_number=90, account_balance=90.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=false]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=25, account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 272
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver BankAccount [account_id=25, account_number=25, account_balance=0.0, account_user=null, account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The following transaction was successful: 
		Transaction [type=1, transaction_id=273, account=BankAccount [account_id=24, account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]], account_status=true], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - We're so glad that you're taking the first steps to modernize your banking.
Once again, welcome to the blockchain!

INFO - {class: com.cryptobank.frontend.UserCreatorPrompt} - What type of account are you creating today?
Enter 1 for Customer Account
Enter 2 for *Employee Account
		* You can apply for a bank account in your dashboard!
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - TransactionDAOImpl sql statement problem
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - TransactionDAOImpl sql statement problem
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=267, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=268, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=269, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=270, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=271, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=267, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=268, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=269, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=270, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transfer [receiver=BankAccount [account_id=171, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], type=2, getType()=1, getTransaction_id()=271, getAccount()=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], getAmount()=0.0, getStatus()=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_id=170, account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null], account_status=false], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.TransferPromptTest} - User [userId=0, userName=testUser1, email=testEmail1@test.com, group=UserGroup [userGroupName=customer]]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=178, userName=testUser1, email=testEmail1@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
INFO - {class: com.cryptobank.models.UserCreateTest} - User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 30
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 30
INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_number=90, account_balance=90.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Approve Incoming Deposits!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This failed!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This failed!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - This failed!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 4 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - ChangeTransferStatus method - Transaction [type=1, transaction_id=267, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 1
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 1
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 3 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to REJECT this transfer

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - ChangeTransferStatus method - Transaction [type=1, transaction_id=268, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 1
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 1
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.models.UserCreateTest} - Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 178
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 179
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, testUser2

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=269, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=270, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 2 Transaction [type=1, transaction_id=271, account=BankAccount [account_number=171, account_balance=0.0, account_user=User [userId=179, userName=testUser2, email=testEmail2@test.com, group=null]], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
DEBUG - {class: com.cryptobank.DAOImpl.AccountDAOImpl} - getUserAccounts - userId = 30
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's Bank Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - Pending Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 	BankAccount [account_number=90, account_balance=90.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Select Active Accounts

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Enter the Account Number of the Bank Account you'd like to see!
			* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_number=25, account_balance=25.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} -     BankAccount [account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending WithdrawalsBankAccount [account_number=24, account_balance=24.0, account_user=User [userId=30, userName=espinalc, email=christopher.espinal@gmail.com, group=UserGroup [userGroupName=customer]]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=90.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
		* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 		[account_number=25, account_balance=25.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 		[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?

INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, the transaction wasn't successful!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit to the TRANSACTIONS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
How much would you like to withdraw from your account?

DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
INFO - {class: com.cryptobank.frontend.Dashboard} - The following transaction was successful: 
		Transaction [type=1, transaction_id=274, account=[account_number=24, account_balance=24.0, account_user=30], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit to the TRANSACTIONS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - I'm sorry, the transfer payment wasn't successful!
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Transaction DAO Impl - Transaction ID key = 275
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=90.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=25.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!

DEBUG - {class: com.cryptobank.frontend.Dashboard} - 30
INFO - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - Insufficient Funds!
INFO - {class: com.cryptobank.frontend.Dashboard} - I'm sorry, the transfer payment wasn't successful!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!

DEBUG - {class: com.cryptobank.frontend.Dashboard} - 30
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - executeTransfer - TransferDAOImpl - Transaction ID key = 276
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=90.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=25.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!

DEBUG - {class: com.cryptobank.frontend.Dashboard} - 30
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - executeTransfer - TransferDAOImpl - Transaction ID key = 277
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver [account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=90.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=24.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=25.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=25, account_balance=25.0, account_user=30]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=272, account=[account_number=25, account_balance=0.0, account_user=30], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=40, account=[account_number=90, account_balance=0.0, account_user=30], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=272, account=[account_number=25, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=40, account=[account_number=90, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
DEBUG - {class: com.cryptobank.main.Main} - ....Loading your dashboard!
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to create an account?
		* Press 1 to create an account
		* Press anything else to quit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to exit to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Now please enter an amount!

DEBUG - {class: com.cryptobank.frontend.Dashboard} - 30
DEBUG - {class: com.cryptobank.models.validators.Validator} - This value is okay!
DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - executeTransfer - TransferDAOImpl - Transaction ID key = 278
INFO - {class: com.cryptobank.frontend.Dashboard} - The transfer payment to the following account!:
		Receiver [account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Transfer Funds dashboard

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the account number that you will transfer to:
		* An invalid number will cause you to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=272, account=[account_number=25, account_balance=0.0, account_user=30], amount=0.0, status=pending]

DEBUG - {class: com.cryptobank.DAOImpl.TransactionDAOImpl} - 
getTransactionsByUser Method Transaction [type=1, transaction_id=40, account=[account_number=90, account_balance=0.0, account_user=30], amount=0.0, status=pending]

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=272, account=[account_number=25, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=40, account=[account_number=90, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transaction [type=1, transaction_id=272, account=[account_number=25, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transaction [type=1, transaction_id=40, account=[account_number=90, account_balance=0.0, account_user=30], amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - This username-password combo doesn't exist! Please try again!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 [type= Withdrawal, transaction_id=272, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 [type= Withdrawal, transaction_id=40, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - /nType in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 Transfer [receiver=[account_number=25, account_balance=0.0, account_user=30], type=1]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 Transfer [receiver=[account_number=90, account_balance=0.0, account_user=30], type=1]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Type in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Incoming Transfers dashboard, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 [type= Withdrawal, transaction_id=272, account=24, amount=0.0, status=pending][receiver=[account_number=25, account_balance=0.0, account_user=30]]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 [type= Withdrawal, transaction_id=40, account=24, amount=0.0, status=pending][receiver=[account_number=90, account_balance=0.0, account_user=30]]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Type in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
[type= Withdrawal, transaction_id=272, account=24, amount=0.0, status=pending][receiver=[account_number=25, account_balance=0.0, account_user=30]]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.main.Main} - Would you like to continue or leave?
Press "1" to continue.
Enter any other key to leave!

INFO - {class: com.cryptobank.main.Main} - Take care!
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - Sorry, try again!

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - INCOMING TRANSFERS DASHBOARD, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 [transaction_id= 272 amount= 0.0 receiver= espinalc]
INFO - {class: com.cryptobank.frontend.Dashboard} - index 1 [transaction_id= 40 amount= 0.0 receiver= espinalc]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Type in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
[transaction_id= 272 amount= 0.0 receiver= espinalc]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the MAIN DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - If you want to Create Accounts or View Your Accounts press 1!
		* Press 1 to continue
		* or anything else to go to LOG OUT!

INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - INCOMING TRANSFERS DASHBOARD, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - index 0 [transaction_id= 40 amount= 0.0 receiver= espinalc]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
Type in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - What would you like to do with the following account:
[transaction_id= 40 amount= 0.0 receiver= espinalc]
			* Press 1 to Approve this transfer
			* Press 2 to Reject this transfer
			* Press any other button to go back

INFO - {class: com.cryptobank.frontend.Dashboard} - You have chosen to ACCEPT this transfer

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

INFO - {class: com.cryptobank.frontend.Dashboard} - INCOMING TRANSFERS DASHBOARD, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - 
Type in the index of the Transfer you'd like to approve or reject:

INFO - {class: com.cryptobank.frontend.Dashboard} - Account number's don't have letters! Please try again!

INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to go to the ACCOUNTS DASHBOARD

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to transfer money to another account!
		* Press 3 to view Pending Withdrawals
Current Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.main.Main} - Hello, Welcome to another Crypto Bank!
Better yet, welcome to the Blockchain!

INFO - {class: com.cryptobank.main.Main} - What would you like to do today?
Press 1 to Login
Press 2 to Create a New Cryptocurrency Wallet

INFO - {class: com.cryptobank.frontend.LoginPrompt} - Please type in your username:
INFO - {class: com.cryptobank.frontend.LoginPrompt} - Great, now enter your password!
INFO - {class: com.cryptobank.frontend.LoginPrompt} - 
Welcome back to the Blockchain, espinalc
INFO - {class: com.cryptobank.main.Main} - Hello, espinalc.
Dashboard


INFO - {class: com.cryptobank.frontend.Dashboard} - Please choose from the following options:
		* Press 1 to apply for a bank account
		* Press 2 to check your account(s)

INFO - {class: com.cryptobank.frontend.Dashboard} - espinalc's WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - PENDING WALLETS

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=90, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 
ACTIVE ACCOUNTS

INFO - {class: com.cryptobank.frontend.Dashboard} - Enter the Account Number of the Bank Account you'd like to see!
	* Press anything else to exit

INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	[account_number=25, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - Welcome to the Transaction dashboard, espinalc
		* Press 1 to withdraw from this account!
		* Press 2 to Transfer Money to another account!
		* Press 3 to view Pending Withdrawals
		* Press 4 to view Transaction HistoryCurrent Account: 
		[account_number=24, account_balance=0.0, account_user=30]
INFO - {class: com.cryptobank.frontend.Dashboard} - TRANSACTION HISTORY DASHBOARD, espinalc

INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Withdrawal, transaction_id=273, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Withdrawal, transaction_id=274, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Transfer, transaction_id=275, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Transfer, transaction_id=276, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Transfer, transaction_id=277, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Transfer, transaction_id=278, account=24, amount=0.0, status=pending]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Withdrawal, transaction_id=272, account=24, amount=0.0, status=completed]
INFO - {class: com.cryptobank.frontend.Dashboard} - 	Time 1  [type= Withdrawal, transaction_id=40, account=24, amount=0.0, status=completed]
INFO - {class: com.cryptobank.frontend.Dashboard} - Would you like to continue or exit?
		* Press 1 to continue
 		* Press anything else to return to the TRANSACTION DASHBOARD

